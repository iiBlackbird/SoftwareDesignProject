// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  fullName String?
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Gonna add this later, focusing on authentication first - matt
  // location String?
  // skills String[]
  // preferences String[]
  // availability String?

  emailVerified Boolean @default(false)
  verificationToken String? @unique
}

// EventDetails table 
// model EventDetails {
//  id           Int @id @default(autoincrement())
//  eventName    String
//  eventDesc    String
//  location     String
//  Skills       String[]
//  Urgency      String
//  EventDate    DateTime  
// }

// VolunteerHistory table - will implement later 
// model VolunteerHistory {
//  id           Int @id @default(autoincrement())
//  userId       String       // foreign key to UserProfile.id
//  eventId      String       // foreign key to EventDetails.id
//  status       String     // 'assigned', 'enrolled', 'completed'
//  user         UserProfile  @relation(fields: [userId], references: [id])
//  event        EventDetails @relation(fields: [eventId], references: [id])
//  createdAt    DateTime @default(now())
//  updatedAt    DateTime @updatedAt 
// }